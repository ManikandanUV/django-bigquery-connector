name: Python Package

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
        django-version: ['4.1', '4.2']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        pip install "django==${{ matrix.django-version }}"
    
    - name: Run tests
      env:
        PYTHONPATH: ${{ github.workspace }}
      run: |
        pytest

  deploy-testpypi:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine requests
    
    - name: Get package version
      id: get_version
      run: |
        VERSION=$(python -c "import django_bq; print(django_bq.__version__)")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Check if version exists on TestPyPI
      id: check_version
      run: |
        VERSION=${{ steps.get_version.outputs.version }}
        RESPONSE=$(curl -s "https://test.pypi.org/pypi/django-bigquery-connector/$VERSION/json")
        if [[ $RESPONSE == *"\"version\": \"$VERSION\""* ]]; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Build package
      if: steps.check_version.outputs.exists == 'false'
      run: python -m build
    
    - name: Publish to TestPyPI
      if: steps.check_version.outputs.exists == 'false'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        twine upload --verbose --repository-url https://test.pypi.org/legacy/ dist/*

  deploy-pypi:
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine requests
    
    - name: Get package version
      id: get_version
      run: |
        VERSION=$(python -c "import django_bq; print(django_bq.__version__)")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Check if version exists on PyPI
      id: check_version
      run: |
        VERSION=${{ steps.get_version.outputs.version }}
        RESPONSE=$(curl -s "https://pypi.org/pypi/django-bigquery-connector/$VERSION/json")
        if [[ $RESPONSE == *"\"version\": \"$VERSION\""* ]]; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Build package
      if: steps.check_version.outputs.exists == 'false'
      run: python -m build
    
    - name: Publish to PyPI
      if: steps.check_version.outputs.exists == 'false'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload --verbose dist/* 