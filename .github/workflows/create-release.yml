name: Create Production Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 0.1.0)'
        required: true
        type: string
      release_notes:
        description: 'Release notes'
        required: true
        type: string
        default: ''

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine requests
    
    - name: Update version in __init__.py
      run: |
        VERSION="${{ github.event.inputs.version }}"
        sed -i "s/__version__ = .*/__version__ = \"$VERSION\"/" django_bq/__init__.py
    
    - name: Create Release Tag
      run: |
        VERSION="${{ github.event.inputs.version }}"
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add django_bq/__init__.py
        git commit -m "Bump version to $VERSION"
        git tag -a "v$VERSION" -m "Release v$VERSION"
        git push origin main
        git push origin "v$VERSION"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.event.inputs.version }}
        name: Release v${{ github.event.inputs.version }}
        body: ${{ github.event.inputs.release_notes }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build package
      run: python -m build
    
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload --verbose dist/* 